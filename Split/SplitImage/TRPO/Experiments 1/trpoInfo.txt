##exp_1
10x10 grid
step-size: 0.01
 conv_filters = [10,10],


    conv_filter_sizes = [5,5],
    conv_strides = [1,1],
    conv_pads = ["SAME", "SAME"],


    hidden_sizes=[32, 32, ac_dim],
    learn_std = False,

##exp_2
10x10 grid

    conv_filters = [5,5],


    conv_filter_sizes = [3,3],
    conv_strides = [1,1],
    conv_pads = ["SAME", "SAME"],


    hidden_sizes=[ 32, ac_dim],
    learn_std = False,

##exp_3
20x20 grid
    env_spec=env.spec,
    # The neural network policy should have two hidden layers, each with 32 hidden units.

    conv_filters = [10,10],


    conv_filter_sizes = [5,5],
    conv_strides = [1,1],
    conv_pads = ["SAME", "SAME"],


    hidden_sizes=[ 32, ac_dim],
    learn_std = False,
)

##exp_4 {Partial}
40x40 grid
 conv_filters = [40,40],


    conv_filter_sizes = [11,11],
    conv_strides = [1,1],
    conv_pads = ["SAME", "SAME"],


    hidden_sizes=[ 32, ac_dim],
    learn_std = False,


##exp_5 [SPLIT]
10x10 grid                                  SL_rate: 1e-3
                                            num_SL_steps: 3

    conv_filters = [5,5],


    conv_filter_sizes = [3,3],
    conv_strides = [1,1],
    conv_pads = ["SAME", "SAME"],


    hidden_sizes=[ 32, ac_dim],
    learn_std = False,

##exp_6 [SPLIT]
same as 5, but num_SL_steps = 10

##exp_7 [SPLIT]
same as 6

##exp_8 
same as 7
but SL_rate = 1e-2

##exp_9 
20x20 grid, split
kernels: [10,10] ; [5,5]
num_sl steps =1, rate = 1e-3

##exp_10
same as 9, but rate = 1e-2

##exp_11
same as 10, but SL off
#exp_12
same as 11, but num_steps = 10

#exp_13
same as 10, but num_steps = 10

